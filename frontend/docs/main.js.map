{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/message/message.component.css","webpack:///./src/app/message/message.component.html","webpack:///./src/app/message/message.component.ts","webpack:///./src/app/service/todo.service.ts","webpack:///./src/app/tasks/tasks.component.css","webpack:///./src/app/tasks/tasks.component.html","webpack:///./src/app/tasks/tasks.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { HomeComponent } from \"./home/home.component\";\nimport { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nconst routes: Routes = [\n  { path: \"\", component: HomeComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"]\n})\nexport class AppComponent {\n  title = \"todo-app\";\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { TasksComponent } from './tasks/tasks.component';\nimport { MessageComponent } from './message/message.component';\nimport { TodoService } from './service/todo.service';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    TasksComponent,\n    MessageComponent\n  ],\n  imports: [BrowserModule, AppRoutingModule, FormsModule, HttpClientModule],\n  providers: [TodoService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<todo-message [message]=\\\"alert\\\"></todo-message>\\n<todo-tasks\\n  (deleteItemMessage)=\\\"onItemMessage($event)\\\"\\n  (itemStatusChangeMessage)=\\\"onItemMessage($event)\\\"\\n></todo-tasks>\\n\"","import { TodoService } from './../service/todo.service';\nimport { ToDo } from './../model/models';\nimport { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"todo-home\",\n  templateUrl: \"./home.component.html\",\n  styleUrls: [\"./home.component.css\"]\n})\nexport class HomeComponent {\n  alert: string;\n\n  constructor(private todoService: TodoService){}\n\n  onAddItem(todo: ToDo) {\n    \n  }\n\n  onUpdateItem(oldValue: string, newValue: string) {\n    if (oldValue != null && oldValue !== newValue) {\n      this.alert = oldValue + \" is updated to \" + newValue + \" sucessfully...\";\n    } else if (oldValue != null && oldValue === newValue) {\n      this.alert = oldValue + \" is not updated...\";\n    }\n  }\n\n  onItemMessage(mgs) {\n    this.alert = mgs;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lc3NhZ2UvbWVzc2FnZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div\\n  [hidden]=\\\"message == undefined\\\"\\n  class=\\\"container alert alert-secondary alert-dismissible fade show\\\"\\n  role=\\\"alert\\\"\\n>\\n  {{ message }}\\n  <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n\"","import { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"todo-message\",\n  templateUrl: \"./message.component.html\",\n  styleUrls: [\"./message.component.css\"]\n})\nexport class MessageComponent {\n  @Input() message: string;\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ToDo } from '../model/models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoService {\n  url: string = 'http://localhost:5000/api/todos';\n\n  constructor(private http: HttpClient) { }\n\n  loadTodos(): Observable<ToDo[]>{\n    return this.http.get<ToDo[]>(this.url);\n  }\n\n  addTodo(toDo: ToDo){\n    const httpOptions = {\n      headers: new HttpHeaders({'Content-Type':'application/json'})\n    };\n    return this.http.post(this.url, JSON.stringify(toDo), httpOptions);\n  }\n\n  update(toDo: ToDo){\n    const httpOptions = {\n      headers: new HttpHeaders({'Content-Type': 'application/json'})\n    };\n    return this.http.put(`${this.url}/${toDo.id}`, JSON.stringify(toDo), httpOptions);\n  }\n\n  delete(toDo: ToDo){\n    console.log(toDo);\n    return this.http.delete(`${this.url}/${toDo.id}`);\n  }\n}\n","module.exports = \".strike{ text-decoration-line: line-through }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFza3MvdGFza3MuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxTQUFTLG1DQUFtQyIsImZpbGUiOiJzcmMvYXBwL3Rhc2tzL3Rhc2tzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc3RyaWtleyB0ZXh0LWRlY29yYXRpb24tbGluZTogbGluZS10aHJvdWdoIH1cbiJdfQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Todo App</a>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarTogglerDemo02\\\"></div>\\n\\n    <ul class=\\\"navbar-nav mr-auto mt-2 mt-lg-0\\\"></ul>\\n    <div class=\\\"form-inline my-2 my-lg-0\\\">\\n      <input\\n        class=\\\"form-control mr-sm-2\\\"\\n        type=\\\"search\\\"\\n        placeholder=\\\"Add Todo Item\\\"\\n        #todoItem\\n        (keyup.enter)=\\\"onAddItem(todoItem)\\\"\\n      />\\n      <button\\n        class=\\\"btn btn-outline-dark my-2 my-sm-0\\\"\\n        type=\\\"submit\\\"\\n        (click)=\\\"onAddItem(todoItem)\\\"\\n      >\\n        Add Item\\n      </button>\\n    </div>\\n  </nav>\\n\\n\\n  <table class=\\\"table table-bordered\\\">\\n    <thead></thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let task of todos\\\" [class.table-dark]=\\\"task.isDone\\\">\\n        <td>\\n          <div [hidden]=\\\"!task.isDone\\\" [class.strike]=\\\"task.isDone\\\">\\n            {{ task.description }}\\n          </div>\\n          <div [hidden]=\\\"task.isDone\\\">\\n            <a>{{ task.description }}</a>\\n          </div>\\n        </td>\\n        <td>\\n          <div\\n            (click)=\\\"onStateChange(task)\\\"\\n            style=\\\"text-decoration-line: underline; cursor: pointer\\\"\\n          >\\n            {{ task.isDone ? \\\"Done\\\" : \\\"Not done yet\\\" }}\\n          </div>\\n        </td>\\n        <td>\\n          <button\\n            (click)=\\\"onDelete(task)\\\"\\n            class=\\\"btn btn-outline-dark my-2 my-sm-0\\\"\\n            type=\\\"submit\\\"\\n          >\\n            Delete\\n          </button>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\"","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { ToDo } from '../model/models';\nimport { TodoService } from '../service/todo.service';\n\n@Component({\n  selector: 'todo-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\nexport class TasksComponent implements OnInit {\n  todos: ToDo[];\n  todo: ToDo;\n\n  @Output() deleteItemMessage = new EventEmitter();\n  @Output() itemStatusChangeMessage = new EventEmitter();\n  @Output() addItemMessage = new EventEmitter();\n\n  constructor(private todoService: TodoService) {}\n\n  refreshTodos(){\n    this.todoService.loadTodos().subscribe(x => {\n      this.todos = x;\n      console.log(\"refreshTodos -> todos: \", this.todos);\n    });\n  }\n\n  ngOnInit(): void {\n    this.refreshTodos();\n  }\n\n  onAddItem(task) {\n    if (task.value === \"\")\n      return;\n\n    this.todo = { description: task.value, isDone: false };\n    task.value = \"\";\n\n    this.addItemMessage.emit(task.value + \" is added successfully...\");\n    this.todoService.addTodo(this.todo).subscribe(_ => this.refreshTodos());\n    this.refreshTodos();\n  }\n\n  onStateChange(todo: ToDo) {\n    todo.isDone = !todo.isDone;\n    this.todoService.update(todo).subscribe(_ => this.refreshTodos());\n    let msg = todo.isDone\n    ? todo.description + ' is completed successfully...'\n    : todo.description + ' is not completed yet...';\n    this.itemStatusChangeMessage.emit(msg);\n  }\n\n  onDelete(todo: ToDo) {\n    console.log(\"todo: \", todo);\n    this.todoService.delete(todo).subscribe(_ => this.refreshTodos());\n    this.deleteItemMessage.emit(todo.description + ' is deleted successfully...');\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}